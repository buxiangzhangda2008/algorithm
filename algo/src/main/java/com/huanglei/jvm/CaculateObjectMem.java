package com.huanglei.jvm;

import org.apache.lucene.util.RamUsageEstimator;

import java.util.Stack;

public class CaculateObjectMem {
    public static void main(String[] args) {
//        Long longObj = new Long(1L);
//        RamUsageEstimator.sizeOf(longObj);
        boolean ret = new Long(1000) == new Long(1000);
        System.out.println("Long is:" + ret);
        boolean ret1 = new Double(1000) == new Double(1000);
        System.out.println("Double is:" + ret1);
        Stack s  = new Stack();
        Double d2 = new Double(1001);
        Double d1 = new Double(1000);
        if (d2 > d1) {
            System.out.println("d2 > d1");
        }
        Double d11 = new Double(29);
        Double d12 = new Double(29);
        if (d12 == d11) {
            System.out.println("d2 == d1");
        }

    }
}
//trigger ids :
//3142,3144,3145,3147,3151,3153,3154,3163,3165,3166,3168,3173,3162,3183,3185,3213,3216,3220,3225,3227,3229,3231,3237,3241,3242,3243,3248,3249,3252,3253,3258,3260,3264,3266,3272,3274,3278,3281,3285,3287,3294,3304,3305,3309,3310,3312,3313,3314,3315,3317,3320,3322,3323,3324,3327,3328,3330,3331,3332,3333,3335,3336,3340,3341,3342,3343,3344,3359,3361,3368,3373,3392,3395,3396,3399,3400,3401,3403,3406,3407,3408,3409,3410,3411,3412,3416,3417,3418,3419,3421,3422,3423,3427,3431,3433,3434,3441,3442,3443,3444,3445,3446,3449,3456,3461,3476,3477,3483,3490,3492,3495,3496,3515,3516,3517,3522,3523,3524,3525,3527,3529,3531,3541,3542,3543,3544,3545,3547,3548,3549,3555,3556,3557,3558,3561,3562,3563,3564,3565,3566,3567,3569,3575,3576,3577,3579,3581,3582,3584,3587,3600,3601,3602,3603,3610,3448,3632,3635,3636,3638,3641,3642,3655,3659,3662,3663,3685,3687,3688,3681,3689,3690,3698,3699,3700,3707,3709,3713,3714,3719,3721,3723,3735,3736,3737,3740,3773,3774,3775,3796,3798,3799,3813,3814,3821,3822,3823,3826,3827,3828,3829,3830,3831,3839,3840,3841,3843,3846,3870,3871,3872,3873,3874,3878,3879,3881,3882,3884,3887,3894,3917,3918,3923,3925,3927,3928,3929,3930,3938,3950,3951,3974,3978,3994,4009,4010,3848,4016,4019,4020,4022,4026,4042,4043,4057,4063,4064,4072,3289,4074,4075,3999,4088,4089,4090,4086,